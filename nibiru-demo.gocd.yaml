---
pipelines:
  MavenBuild:
    group: RestServiceYAMLPipeline
    environment_variables:
      BON: klu
    label_template: "restservicejavamaven-usw1-${COUNT}"
    materials:
      rest-service:
        git: git@github.com:pearsontechnology/restservicejavamaven.git
        branch: master
    stages:
      - verify:
          clean_workspace: true
          jobs:
            code-coverage:
              resources:
               - maven
              tasks:
               - exec:
                   command: mvn
                   arguments:
                    - "-B"
                    - "clean"
                    - "test"
      - compile:
          jobs:
            compile:
              resources:
                - maven
              artifacts:
                - build:
                    source: target/restservicejavamaven-0.0.1-SNAPSHOT.deb
              tasks:
                - exec:
                   command: mvn
                   arguments:
                    - "-B"
                    - "clean"
                    - "package"
      - deploy:
         jobs:
           deploy:
             resources:
              - st2
             tasks:
              - exec:
                  run_if: passed
                  command: /bin/bash
                  arguments:
                    - -c
                    - st2 run aws_boto3.sts_assume_role RoleArn="arn:aws:iam::410908411653:role/st2_role" RoleSessionName="${GO_PIPELINE_LABEL}Session" --json >> ./${GO_PIPELINE_LABEL}.json
              - fetch:
                  pipeline: MavenBuild
                  stage: compile
                  job: compile
                  is_file: yes
                  source: restservicejavamaven-0.0.1-SNAPSHOT.deb
              - exec:
                  run_if: passed
                  command: /bin/bash
                  arguments:
                    - -c
                    -  python build/saveartifacts.py ./${GO_PIPELINE_LABEL}.json ${GO_PIPELINE_LABEL} restservicejavamaven-0.0.1-SNAPSHOT.deb  packer/restservicejavamaven.json aws/gocd-usw1-key-cust.pem us-west-1

  BuildAmi:
    group: RestServiceYAMLPipeline
    label_template: "${MavenBuild}"
    locking: off
    materials:
      MavenBuild:
        pipeline: MavenBuild
        stage: deploy
    stages:
      - create-ami:
          jobs:
            build-ami:
              resources:
               - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - st2 run nibiru.build_app_ami_chain os_name=ubuntu1604 package_install_loc=/home/ubuntu/RestServiceJavaMaven-usw1-0.0.1-SNAPSHOT.deb ec2_instance_type=t2.micro app_ami_name=restservicejavamaven-usw1 pipeline_id=${GO_PIPELINE_LABEL} packer_timeout=1200 region=us-west-1 assume_role_arn="arn:aws:iam::410908411653:role/st2_role"

  CreateInstance:
    group: RestServiceYAMLPipeline
    label_template: "${BuildAmi}"
    locking: off
    materials:
      BuildAmi:
        pipeline: BuildAmi
        stage: create-ami
    stages:
      - create-instance:
          jobs:
            create-ec2-instance:
              resources:
               - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - st2 run nibiru.build_app_ec2_instance_mistral app_ami_name=RestServiceJavaMaven-usw1 key_name=gocd-usw1-key-cust instance_type=t2.micro app_instance_name=RestServiceJavaMavenInstance pipeline_id=${GO_PIPELINE_LABEL} region=us-west-1 assume_role_arn=arn:aws:iam::410908411653:role/st2_role
  StartApp:
    group: RestServiceYAMLPipeline
    label_template: "${CreateInstance}"
    locking: off
    materials:
      CreateInstance:
        pipeline: CreateInstance
        stage: create-instance
    stages:
      - start-app:
          jobs:
            start-app:
              resources:
               - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - st2 run nibiru.start_java_debian_app_mistral app_ami_name=RestServiceJavaMaven-usw1 pipeline_id=${GO_PIPELINE_LABEL} packagename=RestServiceJavaMaven-usw1-0.0.1-SNAPSHOT.deb servicename=restservicejavamaven key_file_name=/opt/share/gocd-use1-key.pem region=us-west-1 assume_role_arn=arn:aws:iam::410908411653:role/st2_role
  IntegrationTests:
    group: RestServiceYAMLPipeline
    label_template: "${StartApp}"
    locking: off
    materials:
      StartApp:
        pipeline: StartApp
        stage: start-app
      rest-service:
        git: git@github.com:pearsontechnology/restservicejavamaven.git
        branch: master
    stages:
      - integration-tests:
          jobs:
            integration-tests:
              resources:
                - maven
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - mvn verify -DconsulUrl=RestServiceJavaMaven-usw1-${GO_PIPELINE_LABEL}
  PerformanceTests:
    group: RestServiceYAMLPipeline
    label_template: "${StartApp}"
    locking: off
    materials:
      StartApp:
        pipeline: StartApp
        stage: start-app
      rest-service:
        git: git@github.com:pearsontechnology/restservicejavamaven.git
        branch: master
    stages:
      - performance-tests:
          jobs:
            run-jmeter-test:
              resources:
                - st2
                - jmeter
              tasks:
                - exec:
                    run_if: passed
                    command: st2
                    arguments:
                      - "run"
                      - "nibiru.setupjmetertestchain"
                      - "app_ami_name=${APP_AMI_NAME}"
                      - "pipeline_id=${GO_PIPELINE_LABEL}"
                      - "jmeter_file=${JMETER_FILE_REMOTE}"
                - exec:
                    run_if: passed
                    command: jmeter
                    arguments:
                      - "-n"
                      - "-t"
                      - "${JMETER_FILE_LOCAL}"
                      - "-l"
                      - "~/GoCDPOC/testresult-${APP_AMI_NAME}-${GO_PIPELINE_LABEL}.jtl"
                      - "-j ~/GoCDPOC/jmeterlog-${COUNT}"
  CleanupPipeline:
    group: RestServiceYAMLPipeline
    label_template: "${IntegrationTests}"
    locking: off
    materials:
      IntegrationTests:
        pipeline: IntegrationTests
        stage: integration-tests
      PerformanceTests:
        pipeline: PerformanceTests
        stage: performance-tests
    stages:
      - cleanup-artifacts:
          jobs:
            terminate-instance:
              resources:
                - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - st2 run nibiru.terminate_ec2_instance_chain app_ami_name=RestServiceJavaMaven-usw1 pipeline_id=${GO_PIPELINE_LABEL} assume_role_arn=arn:aws:iam::410908411653:role/st2_role
