---
pipelines:
  maven-build:
    group: RestServiceDeliveryPipeline
    environment_variables:
      BON: klu
    label_template: "restservicejavamaven-usw1-${COUNT}"
    materials:
      rest-service:
        git: git@github.com:pearsontechnology/restservicejavamaven.git
        branch: master
    stages:
      - verify:
          clean_workspace: true
          jobs:
            code-coverage:
              resources:
               - maven
              tasks:
               - exec:
                   command: mvn
                   arguments:
                    - "clean"
                    - "test"
      - compile:
          jobs:
            compile:
              resources:
               - maven
              tasks:
               - exec:
                   command: mvn
                   arguments:
                    - "clean"
                    - "package"
      - deploy:
         jobs:
           deploy:
             resources:
              - maven
              - awscli
             tasks:
              - exec:
                  run_if: passed
                  command: /bin/bash
                  arguments:
                    - -c
                    - st2 run aws_boto3.sts_assume_role RoleArn="arn:aws:iam::410908411653:role/st2_role" RoleSessionName="${GO_PIPELINE_LABEL}Session" --json >> /opt/${GO_PIPELINE_LABEL}.json

              - exec:
                  run_if: passed
                  command: /bin/bash
                  arguments:
                    - -c
                    -  python build/saveartifacts.py /opt/${GO_PIPELINE_LABEL}.json ${GO_PIPELINE_LABEL} target/restservicejavamaven-0.0.1-SNAPSHOT.deb  packer/restservicejavamaven.json aws/gocd-usw1-key-cust.pem us-west-1

  build-ami:
    group: RestServiceDeliveryPipeline
    label_template: "${maven-build}"
    locking: off
    materials:
      maven-build:
        pipeline: maven-build
        stage: deploy
    stages:
      - create-ami:
          jobs:
            build-ami:
              resources:
               - st2
               - packer
               - aws
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - st2 run nibiru.build_app_ami_chain os_name=ubuntu1604 package_install_loc=/home/ubuntu/RestServiceJavaMaven-usw1-0.0.1-SNAPSHOT.deb ec2_instance_type=t2.micro app_ami_name=restservicejavamaven-usw1 pipeline_id=${GO_PIPELINE_LABEL} packer_timeout=1200 region=us-west-1

  create-instance:
    group: RestServiceDeliveryPipeline
    labeltemplate: "${build-ami}"
    locking: off
    materials:
      upstream:
        pipeline: build-ami
        stage: create-ami
    stages:
      - create-instance:
          jobs:
            create-ec2-instance:
              resources:
               - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - st2 run nibiru.build_app_ec2_instance_mistral app_ami_name=RestServiceJavaMaven-usw1 key_name=gocd-usw1-key-cust security_group_id=sg-9fef06f9 instance_type=t2.micro app_instance_name=RestServiceJavaMavenInstance pipeline_id=${GO_PIPELINE_LABEL} region=us-west-1
  start-app:
    group: RestServiceDeliveryPipeline
    label_template: "${create-instance}"
    locking: off
    materials:
      upstream:
        pipeline: create-instance
        stage: create-instance
    stages:
      - start-app:
          jobs:
            start-app:
              resources:
               - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - run nibiru.start_java_debian_app_mistral app_ami_name=RestServiceJavaMaven-usw1 pipeline_id=${GO_PIPELINE_LABEL} packagename=RestServiceJavaMaven-usw1-0.0.1-SNAPSHOT.deb servicename=restservicejavamaven key_file_name=/opt/share/gocd-use1-key.pem region=us-west-1
  integration-tests:
    group: RestServiceDeliveryPipeline
    label_template: "${start-app}"
    locking: off
    materials:
      upstream:
        pipeline: start-app
        stage: start-app
      rest-service:
        git: git@github.com:pearsontechnology/restservicejavamaven.git
        branch: master
    stages:
      - integration-tests:
          jobs:
            integration-tests:
              resources:
                - maven
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - mvn verify -DconsulUrl=RestServiceJavaMaven-usw1-${GO_PIPELINE_LABEL}
  performance-tests:
    group: RestServiceDeliveryPipeline
    label_template: "${start-app}"
    locking: off
    materials:
      upstream:
        pipeline: start-app
        stage: start-app
      rest-service:
        git: git@github.com:pearsontechnology/restservicejavamaven.git
        branch: master
    stages:
      - performance-tests:
          jobs:
            run-jmeter-test:
              resources:
                - st2
                - jmeter
              tasks:
                - exec:
                    run_if: passed
                    command: st2
                    arguments:
                      - "run"
                      - "nibiru.setupjmetertestchain"
                      - "app_ami_name=${APP_AMI_NAME}"
                      - "pipeline_id=${GO_PIPELINE_LABEL}"
                      - "jmeter_file=${JMETER_FILE_REMOTE}"
                - exec:
                    run_if: passed
                    command: jmeter
                    arguments:
                      - "-n"
                      - "-t"
                      - "${JMETER_FILE_LOCAL}"
                      - "-l"
                      - "~/GoCDPOC/testresult-${APP_AMI_NAME}-${GO_PIPELINE_LABEL}.jtl"
                      - "-j ~/GoCDPOC/jmeterlog-${COUNT}"
  cleanup-pipeline:
    group: RestServiceDeliveryPipeline
    label_template: "${integration-tests}"
    locking: off
    materials:
      upstream1:
        pipeline: integration-tests
        stage: integration-tests
      upstream2:
        pipeline: performance-tests
        stage: performance-tests
    stages:
      - cleanup-artifacts:
          jobs:
            terminate-instance:
              resources:
                - st2
              tasks:
                - exec:
                    run_if: passed
                    command: /bin/bash
                    arguments:
                      - -c
                      - run nibiru.terminate_ec2_instance_chain app_ami_name=RestServiceJavaMaven-usw1 pipeline_id=${GO_PIPELINE_LABEL}
